@import "../variables";

/*
============================================
Round clock
============================================
 */
$circle-outside-diameter: 240px;
$circle-stroke-width: 14px;
$circle-middle-diameter: $circle-outside-diameter - $circle-stroke-width;
$circle-inside-diameter: $circle-outside-diameter - ($circle-stroke-width * 2);
$circle-middle-perimeter: $circle-middle-diameter * pi();
$circle-dasharray: $circle-middle-perimeter;

$enclosing-circle-padding: 0px;
$enclosing-circle-diameter: $circle-outside-diameter + 2 * $enclosing-circle-padding;

$enclosed-circle-diameter: $circle-inside-diameter - 2 * $enclosing-circle-padding;

#container #clock {
  position: relative;
  margin: 40px auto 0;
  height: $enclosing-circle-diameter;
  width: $enclosing-circle-diameter;
  text-align: center;
  border-radius: $enclosing-circle-diameter / 2;
}

#start-pause {
  border: solid 2px #999;
  $text-circle-diameter: $enclosed-circle-diameter - 40px;
  display: inline-block;
  background: rgba(255,255,255,.6);
  width: $text-circle-diameter;
  height: $text-circle-diameter;
  border-radius: $text-circle-diameter / 2;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  box-sizing: border-box;
}

svg#countdown {
  $countdown-circle-diameter: $circle-outside-diameter - 40px;
  position: absolute;
  top: 50%;
  left: 50%;
  width: $countdown-circle-diameter;
  height: $countdown-circle-diameter;
  transform: translateY(-50%) translateX(-50%) rotateZ(-90deg);
  border-radius: $countdown-circle-diameter / 2;
  border: solid 1px #ccc;
  box-sizing: border-box;

  #countdown-circle, #countdown-circle-background {
    stroke-width: $circle-stroke-width;
    fill: none;
  }

  circle#countdown-circle-background {
    stroke: $countdown-circle-background-color-on;
  }

  circle#countdown-circle {
    $dasharray: 92px * 2 * pi();
    stroke-dasharray: $dasharray;
    stroke: $color;
    transition-property: stroke-dashoffset;
    transition-duration: 100ms;

    #container.counting & {
      stroke: $color-counting;
    }
  }
}
svg#breaks {
  $breaks-circle-diameter: $circle-outside-diameter;
  position: absolute;
  top: $enclosing-circle-padding;
  right: $enclosing-circle-padding;
  width: $circle-outside-diameter;
  height: $circle-outside-diameter;
  transform: rotateZ(-90deg);

  circle {
    fill: none;
    stroke-width: 7px;
  }

  #breaks-background {
    stroke: #ddd;
  }
  circle#breaks-circle {
    $dasharray-breaks: 103px * 2 * pi();
    stroke-dasharray: $dasharray-breaks;
    stroke: #999;
    transition-property: stroke-dashoffset;
    transition-duration: 100ms;
  }
  circle#breaks-outer {
    $dasharray-breaks: 120px + 2 * pi();
    stroke-width: 1px;
    stroke: #ccc;
  }
}